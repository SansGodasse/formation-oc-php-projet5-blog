{% extends 'admin/adminLayout.twig' %}

{% import 'macros.twig' as macros %}

{# head #}
{% block title %}
    {% if postToEdit %}
        Edition de {{ postToEdit.getTitle }}
    {% else %}
        Ecrire un article
    {% endif %}
{% endblock %}

{# body #}
{% block headerTitle %}
    <h1>Editeur d'article</h1>
{% endblock %}

{% block content %}
    <section class="blog-admin">
        {% include "message.twig" %}

        <div class="editor-commands">
            {# Cancel button #}
            <div>
                <button class="btn cancel-button" type="button" onclick="window.location = '/admin';">Retour</button>
            </div>

            {% if postToEdit %}
                {# Delete post button #}
                <div>
                    <form id="delete-post-form" action="/admin/delete-post" method="post">

                        {# CSRF protection #}
                        <input type="hidden" name="csrf-token" value="{{ getCsrfToken() }}">

                        <input type="hidden" name="delete-post" value="{{ postToEdit.getId }}">
                        <p>
                            <input class="btn" type="submit" value="Supprimer l'article">
                        </p>
                    </form>
                </div>
            {% endif %}
        </div>

        <div>
            {% if postToEdit %}
            <form id="publish-post-form" action="/admin/edit-post" method="post">
                <input type="hidden" id="edit-post" name="edit-post" value="{{ postToEdit.getId }}">
                <input type="hidden" name="post-editor-id" value="{{ getUser().getId }}">
                <input type="hidden" name="post-author-id" value="{{ postToEdit.getAuthorId }}">
            {% else %}
            <form id="publish-post-form" action="/admin/add-post" method="post">
                <input type="hidden" name="post-author-id" value="{{ getUser().getId }}">
            {% endif %}

                {# CSRF protection #}
                <input type="hidden" name="csrf-token" value="{{ getCsrfToken() }}">

                <p>
                    <input class="btn" type="submit" value="Enregistrer l'article">
                </p>
                {# Post title #}
                <p>
                    <label for="post-title">Titre de l'article <span class="editor-info">(100 caractères maximum)</span></label><span class="badge" id="title-character-counter"></span><br>
                    <input class="admin-input w100" type="text" name="post-title" id="post-title" value="{{ postToEdit.getTitle }}" onkeyup="countCharacters(event.target, 'title-character-counter', 100);">
                </p>
                {# Post excerpt #}
                <p>
                    <label for="post-excerpt">Extrait de l'article <span class="editor-info">(300 caractères maximum)</span></label><span class="badge" id="excerpt-character-counter"></span><br>
                    <textarea class="admin-textarea w100" name="post-excerpt" id="post-excerpt" cols="30" rows="5" onkeyup="countCharacters(event.target, 'excerpt-character-counter', 300);">{{ postToEdit.getExcerpt }}</textarea>
                </p>
                {# Post content #}
                <p>
                    <label for="post-content">Contenu de l'article</label>
                    {# Choose editor #}
                    <button class="btn" type="button" onclick="myEditor.switchEditor(event, '#post-content');">Ouvrir l'éditeur</button>
                    {# Images library #}
                    <a class="btn" href="/admin/media-library?calling-page=/admin/post-editor">Images</a>
                    {# Choose Markdown #}
                    <input type="checkbox" name="markdown-content" id="markdown-content" {% if markdown %}checked{% endif %}><label class="right-label" for="markdown-content">Markdown</label><br>
                    <textarea class="admin-textarea w100" name="post-content" id="post-content" cols="30" rows="30">{{ postToEdit.getContent }}</textarea>
                </p>

                <hr>
                {# Categories #}
                <div>
                    <h3>Catégories</h3>

                    <ul>
                    {% for category in categories %}
                        <li>
                            <input type="checkbox" name="categories[]" id="cat-{{ category.getName }}" value="{{ category.getName }}" {{ macros.checkPostCategory(category, postToEdit.getCategories) }} onclick="refreshChecked(event);">
                            <label for="cat-{{ category.getName }}">{{ category.getName }}</label>
                        </li>
                    {% endfor %}
                    </ul>
                </div>

                {# Tags #}
                {% include "admin/tagHandler.twig" %}
            </form>
        </div>
    </section>
{% endblock %}

{% block scripts %}
    {{ parent() }}
    {# Post draft #}
    <script src="/public/js/postDraft.js"></script>
    <script>
        window.addEventListener("load", function() {
            myPostDraft.load({{ postToEdit.getId ?? -1 }});
        });
        window.addEventListener('unload', myPostDraft.save);
    </script>
    {# Navigation #}
    <script src="/public/js/navigationHelper.js"></script>
    <script>
        window.addEventListener('unload', function () {
            myNavigationHelper.saveUrl("{{  macros.getPostEditorUrl(postToEdit.getId)|trim }}")
        });
    </script>
    {# Tags #}
    <script src="/public/js/tagHandler.js"></script>
    <script>
        myTagHandler.setTagEventListeners();
    </script>
    {# Editor #}
    <script src="/public/js/chooseEditor.js"></script>
    {# TinyMCE #}
    <script src="https://cloud.tinymce.com/5/tinymce.min.js"></script>
    {# Confirmation messages #}
    <script src="/public/js/areYouSure.js"></script>
    <script>
        // Confirmation messages
        // Delete the post
        var deleteFormElt = document.getElementById('delete-post-form');
        if (deleteFormElt) {
            deleteFormElt.addEventListener('submit', function (event) {
                event.preventDefault();
                areYouSure.show("L'article sera supprimé. Continuer ?", submitForm);

                function submitForm() {
                    event.target.submit();
                }
            });
        }
    </script>
    {# Character counter #}
    <script>
        /**
         * Fill an element with the number of characters of the target element
         *
         * @param targetElt
         * @param counterId
         * @param limit
         */
        function countCharacters(targetElt, counterId, limit = null) {

            var characterCounterElt = document.getElementById(counterId),
                count = 0;

            count = targetElt.value.length;

            if (count > 1) {
                characterCounterElt.textContent = count + ' caractères';
            } else if (count === 1) {
                characterCounterElt.textContent = count + ' caractère';
            } else {
                characterCounterElt.textContent = '';
            }

            if (limit) {
                if (count > limit) {
                    characterCounterElt.style.color = '#dd4444';
                } else {
                    characterCounterElt.style.color = '#b9bbbe';
                }
            }
        }
    </script>
{% endblock %}


